#!/usr/bin/env bash

#define icons for workspaces 1-9
ic=(0 󰆍 󰖟 󱃷 󰉋 󰘔 󱦐 󰺻 󰨞 󰅪)

#initial check for occupied workspaces
for num in $(hyprctl workspaces | grep ID | awk '{print $3}'); do 
  export o"$num"="$num"
done
 
#initial check for focused workspace
for num in $(hyprctl monitors | grep -B 4 "active: yes" | awk 'NR==1{print $3}'); do 
  export f"$num"="$num"
  export fnum=f"$num"
done

workspaces() {
if [[ ${1:0:9} == "workspace" ]]; then #set focused workspace
  unset -v "$fnum" 
  num=${1:11}
  export f"$num"="$num"
  export fnum=f"$num"

elif [[ ${1:0:9} == "activemon" ]]; then #set focused workspace
  unset -v "$fnum"
  num=${1//.*,//}
  export f"$num"="$num"
  export fnum=f"$num"

elif [[ ${1:0:15} == "createworkspace" ]]; then #set Occupied workspace
  num=${1:17}
  export o"$num"="$num"
  export onum=o"$num"

elif [[ ${1:0:16} == "destroyworkspace" ]]; then #unset unoccupied workspace
  num=${1:18}
  unset -v o"$num"
fi

#output eww widget
echo 	"(box	:class \"works\" :orientation \"v\" :halign \"center\" :valign \"start\" :spacing \"-5\" :space-evenly \"false\" \
              (button :onclick \"hyprctl dispatch workspace 1\" :class \"0$o1$f1\" \"${ic[1]}\") \
              (button :onclick \"hyprctl dispatch workspace 2\" :class \"0$o1$f1\" \"${ic[2]}\") \
              (button :onclick \"hyprctl dispatch workspace 3\" :class \"0$o1$f1\" \"${ic[3]}\") \
              (button :onclick \"hyprctl dispatch workspace 4\" :class \"0$o1$f1\" \"${ic[4]}\") \
              (button :onclick \"hyprctl dispatch workspace 5\" :class \"0$o1$f1\" \"${ic[5]}\") \
              (button :onclick \"hyprctl dispatch workspace 6\" :class \"0$o1$f1\" \"${ic[6]}\") \
              (button :onclick \"hyprctl dispatch workspace 7\" :class \"0$o1$f1\" \"${ic[7]}\") \
              (button :onclick \"hyprctl dispatch workspace 8\" :class \"0$o1$f1\" \"${ic[8]}\") \
              (button :onclick \"hyprctl dispatch workspace 9\" :class \"0$o1$f1\" \"${ic[9]}\")
          )"
}
# socat -u UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | while read -r event; do 
# workspaces "$event"
done
